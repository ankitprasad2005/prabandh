#!/bin/bash

# Database connection parameters - load from .env file
SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
ENV_FILE="$SCRIPT_DIR/.env"

if [ -f "$ENV_FILE" ]; then
    source "$ENV_FILE"
else
    echo "Error: .env file not found at $ENV_FILE"
    exit 1
fi

# Function to add an entry to the database
add_entry() {
    if [ $# -ne 7 ]; then
        echo "Usage: add_entry <directory_path> <file_name> <extension> <created_date> <modified_date> <size_bytes> <sha256_hash>"
        return 1
    fi

    local dirpath="$1"
    local filename="$2"
    local extension="$3"
    local created_date="$4"
    local modified_date="$5"
    local size="$6"
    local sha256="$7"

    # SQL query to insert or update the data
    local sql_query="
    INSERT INTO file (id, file_name, file_path, extension, created, modified, size, hash)
    VALUES (
        gen_random_uuid(), 
        '$filename', 
        '$dirpath', 
        '$extension', 
        '$created_date'::timestamp, 
        '$modified_date'::timestamp, 
        $size, 
        '$sha256'
    )
    ON CONFLICT (file_path) 
    DO UPDATE SET 
        file_name = EXCLUDED.file_name,
        extension = EXCLUDED.extension,
        created = EXCLUDED.created,
        modified = EXCLUDED.modified,
        size = EXCLUDED.size,
        hash = EXCLUDED.hash;
    "

    # Execute the SQL query
    PGPASSWORD="$PG_PASSWD" psql -h db -p "$DB_PORT" -U "$PG_USERNAME" -d "prabandh_pg" -c "$sql_query"
    
    if [ $? -eq 0 ]; then
        echo "Entry added/updated successfully."
    else
        echo "Failed to add/update entry."
    fi
}

# Function to search for entries in the database
search() {
    if [ $# -lt 1 ]; then
        echo "Usage: search <search_term> [--limit N] [--exact] [--extension ext] [--path path] [--min-size N] [--max-size N]"
        return 1
    fi

    local search_term="$1"
    shift
    
    local limit=10
    local exact=0
    local extension=""
    local path=""
    local min_size=""
    local max_size=""
    
    # Parse additional arguments
    while [ $# -gt 0 ]; do
        case "$1" in
            --limit)
                limit="$2"
                shift 2
                ;;
            --exact)
                exact=1
                shift
                ;;
            --extension)
                extension="$2"
                shift 2
                ;;
            --path)
                path="$2"
                shift 2
                ;;
            --min-size)
                min_size="$2"
                shift 2
                ;;
            --max-size)
                max_size="$2"
                shift 2
                ;;
            *)
                echo "Unknown option: $1"
                return 1
                ;;
        esac
    done
    
    # Build the SQL query based on the search parameters
    local sql_query="
    SELECT file_name, file_path, extension, to_char(created, 'YYYY-MM-DD HH24:MI:SS') as created_date, 
           to_char(modified, 'YYYY-MM-DD HH24:MI:SS') as modified_date, 
           size, hash 
    FROM file 
    WHERE "
    
    if [ "$exact" -eq 1 ]; then
        sql_query+="(file_path = '$search_term' OR file_name = '$search_term')"
    else
        sql_query+="(file_path ILIKE '%$search_term%' OR file_name ILIKE '%$search_term%')"
    fi
    
    if [ -n "$extension" ]; then
        sql_query+=" AND extension = '$extension'"
    fi
    
    if [ -n "$path" ]; then
        sql_query+=" AND file_path ILIKE '%$path%'"
    fi
    
    if [ -n "$min_size" ]; then
        sql_query+=" AND size >= $min_size"
    fi
    
    if [ -n "$max_size" ]; then
        sql_query+=" AND size <= $max_size"
    fi
    
    sql_query+=" ORDER BY modified DESC LIMIT $limit;"
    
    # Execute the SQL query
    PGPASSWORD="$PG_PASSWD" psql -h localhost -p "$DB_PORT" -U "$PG_USERNAME" -d "prabandh_pg" -t -c "$sql_query"
}

# Function to add entry from CSV line
add_from_csv_line() {
    local line="$1"
    IFS=',' read -r dirpath filename extension created_date modified_date size sha256 <<< "$line"
    
    add_entry "$dirpath" "$filename" "$extension" "$created_date" "$modified_date" "$size" "$sha256"
}

# Function to bulk import from CSV file
import_csv() {
    if [ $# -ne 1 ]; then
        echo "Usage: import_csv <csv_file>"
        return 1
    fi
    
    local csv_file="$1"
    
    if [ ! -f "$csv_file" ]; then
        echo "CSV file not found: $csv_file"
        return 1
    fi
    
    # Skip header line
    tail -n +2 "$csv_file" | while IFS= read -r line; do
        add_from_csv_line "$line"
    done
    
    echo "CSV import completed."
}

# Function to index a directory
index_directory() {
    local directory="${1:-.}"
    
    # Resolve the directory to its absolute path
    directory="$(readlink -f "$directory")"
    
    local indexer_script="$SCRIPT_DIR/scripts/indexer.sh"
    
    if [ ! -f "$indexer_script" ]; then
        echo "Error: indexer.sh script not found at $indexer_script"
        exit 1
    fi
    
    # Run the indexer script with the absolute directory path
    "$indexer_script" "$directory"
    
    # Import the generated CSV file into the database
    import_csv "$HOME/.cache/prabandh_cache.csv"
}

# Display help information
show_help() {
    echo "Prabandh Database Management Script"
    echo ""
    echo "Usage: $0 <command> [options]"
    echo ""
    echo "Commands:"
    echo "  add <dirpath> <filename> <extension> <created_date> <modified_date> <size> <sha256>"
    echo "      Add or update an entry in the database"
    echo ""
    echo "  search <term> [options]"
    echo "      Search for entries in the database"
    echo "      Options:"
    echo "        --limit N       Limit the number of results (default: 10)"
    echo "        --exact         Perform an exact match instead of a partial match"
    echo "        --extension ext Filter results by file extension"
    echo "        --path path     Filter results by path"
    echo "        --min-size N    Filter results by minimum file size (in bytes)"
    echo "        --max-size N    Filter results by maximum file size (in bytes)"
    echo ""
    echo "  import <csv_file>"
    echo "      Bulk import entries from a CSV file"
    echo ""
    echo "  --index <directory>"
    echo "      Index the specified directory and import the data into the database"
    echo ""
    echo "  help"
    echo "      Display this help information"
    echo ""
    echo "Examples:"
    echo "  $0 add /home/user/documents example.txt txt \"2023-01-01 12:00:00\" \"2023-01-02 12:00:00\" 12345 abcdef1234567890"
    echo "  $0 search document --extension pdf --limit 5"
    echo "  $0 import ~/.cache/prabandh_cache.csv"
    echo "  $0 --index ."
}

# Main script execution
case "$1" in
    add)
        shift
        add_entry "$@"
        ;;
    search)
        shift
        search "$@"
        ;;
    import)
        shift
        import_csv "$@"
        ;;
    --index)
        shift
        index_directory "$@"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        if [ -z "$1" ]; then
            show_help
        else
            echo "Unknown command: $1"
            echo "Run '$0 help' for usage information."
            exit 1
        fi
        ;;
esac

exit 0